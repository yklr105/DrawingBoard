/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
import java.util.*;
class Solution {
    public int rangeSumBST(TreeNode root, int L, int R) {
        Deque<TreeNode> treeStack = new ArrayDeque<TreeNode>();
        int sum=0;
        TreeNode curr=root;
        
        treeStack.push(curr);
    
        
        while(!treeStack.isEmpty())
        {
            curr=treeStack.pop();
            if(curr.val>=L && curr.val<=R)
                sum+=curr.val;
            if(L<curr.val && curr.left!=null)
                treeStack.push(curr.left);
            if(R>curr.val && curr.right!=null)
                treeStack.push(curr.right);
            
        }
        return sum;
    }
}
