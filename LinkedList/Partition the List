/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 Time COmplexity is O(N)
 Space Complexity is O(1)
 */
class Solution {
    public ListNode partition(ListNode head, int x) {
        ListNode l1Head= new ListNode();
        ListNode l2Head=new ListNode();
        ListNode l1Prev,l2Prev;
        l1Prev=l1Head;
        l2Prev=l2Head;
       
        ListNode curr = head;
        while(curr!=null)
        {
            //ListNode node = new ListNode(curr.val);
            if(curr.val<x)
            {   
                l1Prev.next=curr;
                l1Prev=l1Prev.next;
            }
            
            else
            {
                l2Prev.next=curr;
                l2Prev=l2Prev.next;
            }
            
            curr=curr.next;
        }
        l2Prev.next=null;
        l1Prev.next=l2Head.next;
        return l1Head.next;
    }
}
