/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 Time complexity is O(N) where N is the size of Linked List
 Space complexity is O(1)
 
 */

class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head.next==null) return null;
        int listLen=0;
        ListNode node = head;
        while(node!=null)
        {
            node=node.next;
            listLen++;
        }
       if(listLen-n==0)
       {
           head=head.next;
           return head;
       }
        node=head;
        ListNode prev=head;
        for(int i=0;i<listLen-n;i++)
        {
            prev=node;
            node=node.next;
        }
        prev.next=node.next;
        return head;
}
}
