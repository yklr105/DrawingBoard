/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 Time complexity is O(N),space complexity is O(1) for pointers 
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        if (head == null) return true;
        ListNode fast=head,mid=head;
        while(fast.next != null && fast.next.next != null)
        {
          mid = mid.next;
          fast= fast.next.next;
        }
       
      
      ListNode previous = null;
      ListNode next=null;
      ListNode curr=mid.next;
      while(curr!=null)
      {
        next=curr.next;
        curr.next=previous;
        previous=curr;
        curr=next;
      }
       
      mid.next=previous;
      boolean result=true;
      ListNode secondStart = mid.next;
      curr=head;
      
      while(result &&  secondStart!=null)
      {
        if(curr.val != secondStart.val) 
          result = false;
        
        curr=curr.next;
        secondStart=secondStart.next;
      }
      return result; 
    }
}
